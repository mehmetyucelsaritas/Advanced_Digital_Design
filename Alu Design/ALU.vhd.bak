-- Quartus Prime VHDL Template
-- Unsigned Adder/Subtractor

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity ALU is

	port 
	(
		A		: in unsigned (2 downto 0);
		B		: in unsigned (2 downto 0);
		SEL		: in unsigned (3 downto 0);
		Y	: out unsigned (3 downto 0)
	);

end entity;

architecture rtl of ALU is
begin

	process(A,B,SEL) --a,b,SEL are  sensivity lists(when one of them changed processes triggered)
	begin
		-- add if "add_sub" is 1, else subtract
		if (SEL = '0000') then
			Y <= A;
		else if (SEL = '0001') then
			Y <= A + 1;
		else if (SEL = '0010') then
			Y <= A - 1;
		else if (SEL = '0011') then
			Y <= B;	
		else if (SEL = '0100') then
		   Y <= A + B;
		else if (SEL = '0101') then
			Y <= A - B;
		else if (SEL = '0110') then
			Y <= A * B;
		else if (SEL = '0111') then
			Y <= 0;
		else if (SEL = '1000') then
			Y <= NOT A;
		else if (SEL = '1001') then
			Y <= NOT B;
		else if (SEL = '1010') then
			Y <= A AND B;
		else if (SEL = '1011') then
			Y <= A OR B;
		else if (SEL = '1100') then
			Y <= A XNOR B;
		else if (SEL = '1101') then
			Y <= A XOR B;
		else if (SEL = '1110') then
			Y <= A NOR B;
		else
			Y <= A NAND B;
		end if;
	end process;

end rtl;
